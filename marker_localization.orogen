name "marker_localization"

import_types_from "base"
import_types_from "base/Eigen.hpp"
import_types_from "marker_localizationTypes.hpp"


task_context "Task" do

  
  ###################
  # Properties
  ###################
  property( "marker_config", "marker_localization/MarkerConfig").
  doc( "Configuration of the known marker-poses in the world-frame")
  
  property("position_variance_const", "double", 0.1).
  doc("A constant variance of the position-output")
  
  property("position_variance_range", "double", 0.05).
  doc("Position-varaince, which is linear to the distance")
  
  property("position_variance_angle", "double", 0.05).
  doc("Angular-error in the position-estimation")
  
  property("orientation_variance_const", "double", 0.01).
  doc("A constant variance of the position-output")

  property("use_body_orientation", "bool", false).
  doc("Use the body orientation in the world frame to compute the body pose")
  
  ##################
  # InputPorts
  ##################
  input_port( "marker_poses", "std/vector<base::samples::RigidBodyState>").
  doc( "Detected marker-poses in the camera-frame")
  
  input_port( "marker_pose", "base::samples::RigidBodyState").
  doc( "detected single marker-pose in the camera-frame")

  input_port( "body2world_orientaiton", "base::samples::RigidBodyState")
  
  ##################
  # OutputPorts
  ##################
  output_port( "pose_samples", "base::samples::RigidBodyState").
  doc( "Vehicle-pose in the world-frame, based on the detected markers")

  output_port("orientation2world", "base::samples::RigidBodyState")

    
  periodic 0.01
  
end

